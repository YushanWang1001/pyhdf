# Based on https://packaging.python.org/guides/supporting-windows-using-appveyor/
# and https://github.com/Anaconda-Platform/anaconda-project/blob/master/appveyor.yml

environment:
  matrix:
    # For Miniconda versions available on Appveyor, see
    # https://www.appveyor.com/docs/windows-images-software/#miniconda
    #- MINICONDA: C:\Miniconda
    #- MINICONDA: C:\Miniconda-x64
    #- MINICONDA: C:\Miniconda3
    #- MINICONDA: C:\Miniconda3-x64
    #- PYTHON: C:\Python36-x64
    #  MINGW: C:\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64
    #  USE_MINGW: yes
    #  HDF4_BIN_ZIP: https://support.hdfgroup.org/ftp/HDF/releases/HDF4.2.14/bin/windows/hdf-4.2.14-win7_64-vs14.zip
    #  HDF4_MSI: hdf\HDF-4.2.14-win64.msi
    - PYTHON: C:\Python36
      MINGW: C:\mingw
      USE_MINGW: yes
      HDF4_BIN_ZIP: https://support.hdfgroup.org/ftp/HDF/releases/HDF4.2.14/bin/windows/hdf-4.2.14-win7_32-vs14.zip
      HDF4_MSI: hdf\HDF-4.2.14-win32.msi

install:
  - if [%USE_MINGW%]==[yes] set PATH=%MINGW%\bin;%PYTHON%;%PYTHON%\Scripts;%PATH%
  - if [%USE_MINGW%]==[yes] gcc --version
  - if [%USE_MINGW%]==[yes] python --version
  - if [%USE_MINGW%]==[yes] pip --version
  - if [%USE_MINGW%]==[yes] appveyor DownloadFile %HDF4_BIN_ZIP% -FileName hdf.zip
  - if [%USE_MINGW%]==[yes] 7z x hdf.zip
  - if [%USE_MINGW%]==[yes] msiexec /i %HDF4_MSI% /quiet /qn /norestart /log install.log
  - if [%USE_MINGW%]==[yes] pip install numpy nose
  - set LIBRARY_DIRS=C:\Program Files\HDF_Group\HDF\4.2.14\bin;C:\Program Files\HDF_Group\HDF\4.2.14\lib
  - set INCLUDE_DIRS=C:\Program Files\HDF_Group\HDF\4.2.14\include
  - if [%USE_MINGW%]==[yes] python setup.py build -c mingw32

  # conda 4.5.11 seems to expect that this directory exists already
  - if not [%USE_MINGW%]==[yes] mkdir C:\Users\appveyor\.conda
  - if not [%USE_MINGW%]==[yes] call %MINICONDA%\Scripts\activate.bat
  # The safety checks are simply intended to ensure that there is enough disk space
  # and the user has the necessary permissions to make environment changes. In a CI
  # environment these are not necessary and slow things down noticeably on Windows.
  - if not [%USE_MINGW%]==[yes] conda config --set always_yes yes --set changeps1 no --set auto_update_conda no --set safety_checks disabled
  - if not [%USE_MINGW%]==[yes] conda install -q conda numpy hdf4 nose
  - if not [%USE_MINGW%]==[yes] conda info -a
  # We need wheel installed to build wheels
  - if not [%USE_MINGW%]==[yes] pip install wheel
  - if not [%USE_MINGW%]==[yes] set LIBRARY_DIRS=%MINICONDA%\Library\bin;%MINICONDA%\Library\lib
  - if not [%USE_MINGW%]==[yes] set INCLUDE_DIRS=%MINICONDA%\Library\include

build: off

test_script:
  # Put your test command here.
  - python setup.py nosetests

after_test:
  # This step builds your wheels.
  - python setup.py bdist_wheel

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.

on_finish:
  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
