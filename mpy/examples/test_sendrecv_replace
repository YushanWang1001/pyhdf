#!/usr/bin/env python

import sys
import Numeric

from mpy import *

MPY_Init()
rank = MPY_Comm_rank()
size = MPY_Comm_size()

root = 0

print "I am P%d of %d on node %s" % \
      (rank, size, MPY_Get_processor_name())
MPY_Barrier()

# NOTE: On the second call to MPY_Sendrecv_replace(), no count is specified.
#       Consequently, all participating processes must send the same number
#       of data elements of the same datatype. Here, all processes exchange 5
#       integers.
if rank == 0:
    s = ['from 0 to 1', 1,2,'andre',[3.14,-5.2]]
    r = MPY_Sendrecv_replace(s, 1, source=3, count=1000)
    print "P%d" % rank, r
    r = MPY_Sendrecv_replace(range(0,5), 1, source=3, dataType=MPY_INT)
    print "P%d : got from %d '%s'" % (rank, 3, r)

elif rank == 1:
    # Pickling Numeric arrays is costly. 'pyPar' is better here.
    s = Numeric.array(((1,2,3),(4,5,6),(7,8,9)), 'i')
    r = MPY_Sendrecv_replace(s, 2, source=0, count=1000)
    print "P%d" % rank, r
    r = MPY_Sendrecv_replace(range(10,15), 2, source=0, dataType=MPY_INT)
    print "P%d : got from %d : '%s'" % (rank, 0, r)

elif rank == 2:
    s = '01234567890123456789'
    r = MPY_Sendrecv_replace(s, 3, source=1, count=1000)
    print "P%d" % rank, r
    r = MPY_Sendrecv_replace(range(20,25), 3, source=1, dataType=MPY_INT)
    print "P%d : got rom %d: '%s'" % (rank, 1, r)

elif rank == 3:
    s = [1.0, 2.0, 3.0]
    r = MPY_Sendrecv_replace(s, 0, source=2, count=1000)
    print "P%d" % rank, r
    r = MPY_Sendrecv_replace(range(30,35), 0, source=2, dataType=MPY_INT)
    print "P%d : got from %d: '%s'" % (rank, 2, r)
    
