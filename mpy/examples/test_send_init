#!/usr/bin/env python

import sys
import Numeric

from mpy import *

MPY_Init()
rank = MPY_Comm_rank()
size = MPY_Comm_size()

root = 0

print "I am P%d of %d on node %s" % \
      (rank, size, MPY_Get_processor_name())
MPY_Barrier()

toProc = [1,2,3]
numMes = 3

if rank == root:
    # Create a permanent request for each receiver.
    requests = {}
    for p in toProc:
        # Send 3 integers on each call to start() .
        requests[p] = MPY_Send_init(p, 3, dataType=MPY_INT)
    # Send messages using the permanent requests.
    for num in range(numMes):
        for p in toProc:
            # Load message into request buffer.
            msg = [root, num, p]
            requestLoad(requests[p], msg)
            # Start the send, equivalent to MPY_Isend()
            MPY_Start(requests[p])
            # Wait for request to complete.
            MPY_Wait(requests[p])

    print "P%d all msgs sent" % rank
    # Free requests
    for p in toProc:
        MPY_Request_free(requests[p])
        

elif rank in toProc:
    request = MPY_Recv_init(10, root, dataType=MPY_INT)
    for num in range(numMes):
        # Start the receive.
        MPY_Start(request)
        # Wait for request to complete.
        status = MPY_Wait(request, retStatus=True)
        # Extract message.
        msg = requestExtract(request)
        print "P%d received '%s' status=%s" % (rank, msg, status)
    # Free request
    MPY_Request_free(request)
