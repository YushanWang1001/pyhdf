#!/usr/bin/env python

import sys
import Numeric

from mpy import *

MPY_Init()
rank = MPY_Comm_rank()
size = MPY_Comm_size()

root = 0

print "I am P%d of %d on node %s" % \
      (rank, size, MPY_Get_processor_name())
MPY_Barrier()

toProc = [1,2,3]
numMes = 3

if rank == root:
    # Send to process 1 a list of integers, first as object then as unsigned 8-bit
    # integers.
    rng = range(250, 260)
    MPY_Send(rng, 1)
    # Wrap around will occur for values > 255
    MPY_Send(rng, 1, dataType=MPY_UNSIGNED_CHAR)
    
    # Send to process 2 a list of reals, first as object, then as floats,
    # then doubles. Note that the integers contained in 'rng' will be converted
    # to the datatype used in the last two sends.
    MPY_Send([f*1.0 for f in rng], 2)
    MPY_Send(rng, 2, dataType=MPY_FLOAT)
    MPY_Send(rng, 2, dataType=MPY_DOUBLE)
    
    # Send to process 3 a string, first as an object, then as a char array.
    # Finally send with special MPY_PYTHON_STR datatype, so that the receiver
    # sees this char array as a string. MPY_PYTHON_STR is a just a commodity type,
    # to simplify the handling of strings using the native MPI datatypes.
    str = "X-?" * 3
    MPY_Send(str, 3)
    MPY_Send(str, 3, dataType=MPY_CHAR)
    MPY_Send(str, 3, dataType=MPY_PYTHON_STR)

elif rank in toProc:
    # All processes are first sent a python object. Get it.
    obj1, status1 = MPY_Recv(root, retStatus=True)
    print "P%d recv obj1='%s' status=%s" % (rank, obj1, status1)
    
    if rank == 1:
        obj2, status2 = MPY_Recv(root, dataType=MPY_UNSIGNED_CHAR,
                                     retStatus=True)
        print "P%d recv obj2='%s'" % (rank, obj2)
        print "P%d msg sizes : 1=%d 2=%d" % (rank, status1.length, status2.length)

    elif rank == 2:
        obj2, status2 = MPY_Recv(root, dataType=MPY_FLOAT,  retStatus=True)
        print "P%d recv obj2='%s'" % (rank, obj2)
        obj3, status3 = MPY_Recv(root, dataType=MPY_DOUBLE, retStatus=True)
        print "P%d recv obj3='%s'" % (rank, obj3)
        print "P%d msg sizes : 1=%d 2=%d 3=%d" % \
              (rank, status1.length, status2.length, status3.length)

    elif rank == 3:
        obj2, status2 = MPY_Recv(root, dataType=MPY_CHAR, retStatus=True)
        obj3, status3 = MPY_Recv(root, dataType=MPY_PYTHON_STR, retStatus=True)
        print "P%d recv obj2='%s'" % (rank, obj2)
        print "P%d recv obj3='%s'" % (rank, obj3)
        print "P%d msg sizes : 1=%d 2=%d 3=%d" % \
              (rank, status1.length, status2.length, status3.length)

    
