#!/usr/bin/env python

import sys
import Numeric

from mpy import *

MPY_Init()
rank = MPY_Comm_rank()
size = MPY_Comm_size()

root = 0

print "I am P%d of %d on node %s" % \
      (rank, size, MPY_Get_processor_name())
MPY_Barrier()

toProc = [1,2,3]
MPY_Buffer_attach(1000)

if rank == root:
    # Create a permanent request for each receiver.
    arr = Numeric.ones((3,3),'i')
    requests = {}
    for p in toProc:
        # Send array 'arr' on each call to MPY_Start() .
        requests[p] = MPY_Bsend_init(p, dataType=MPY_PYTHON_ARRAY, array=arr)
    # Send messages using the permanent requests.
    for p in toProc:
        # Load message into array 'arr'.
        for i in range(3):
            for j in range(3):
                arr[i,j] = p
        # Start the send, equivalent to MPY_Ibsend()
        MPY_Start(requests[p])
        # Wait for request to complete.
        MPY_Wait(requests[p])

    print "P%d all msgs sent" % rank
    # Free requests
    for p in toProc:
        MPY_Request_free(requests[p])
        

elif rank in toProc:
    # Allocate array where to receive message.
    arr = Numeric.zeros((3,3), 'i')
    # Define request.
    request = MPY_Irecv(root, dataType=MPY_PYTHON_ARRAY, array=arr)
    # Start the receive.
    # MPY_Start(request)
    # Wait for request to complete.
    MPY_Wait(request)
    # Extract message.
    msg = requestExtract(request)
    print "P%d received \n%s" % (rank, msg)
    # Free request
    #MPY_Request_free(request)

MPY_Buffer_detach()
