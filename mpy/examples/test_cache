#!/usr/bin/env python

import sys

from mpy import *

MPY_Init()

rank = MPY_Comm_rank()
size = MPY_Comm_size()

key1 = MPY_Keyval_create()
key2 = MPY_Keyval_create(copy_fn=MPY_DUP_FN)

MPY_Attr_put(MPY_COMM_SELF, key1, 10)
MPY_Attr_put(MPY_COMM_SELF, key2, -30)

val1 = MPY_Attr_get(MPY_COMM_SELF, key1)
val2 = MPY_Attr_get(MPY_COMM_SELF, key2) 
print "P%d MPY_COMM_SELF key1=%s" % (rank, val1[0] and val1[1] or 'undef')
print "P%d MPY_COMM_SELF key2=%s" % (rank, val2[0] and val2[1] or 'undef')

# Duplicate communicator to see what happens to attributes. Since 'key2' was
# created by setting 'copy_fn=MPY_DUP_FN', the corresponding attribute value
# is copied over to the new communicator. Default is 'copy_fn=MPY_NULL_COPY_FN', which
# avoids attribute copying. 'key1' was created using the default, so the
# corresponding attribute value is not copied from communicator MPY_COMM_SELF
# to comunicator 'comm'.
comm = MPY_Comm_dup(MPY_COMM_SELF)
val1 = MPY_Attr_get(comm, key1)
val2 = MPY_Attr_get(comm, key2) 
print "P%d comm key1=%s" % (rank, val1[0] and val1[1] or 'undef')
print "P%d comm key2=%s" % (rank, val2[0] and val2[1] or 'undef')

# Delete attribute values.
MPY_Attr_delete(MPY_COMM_SELF, key1)
MPY_Attr_delete(MPY_COMM_SELF, key2)
MPY_Attr_delete(comm, key2)
# It is an error to delete a non-existing attribute. So the following statement
# must not be executed, since 'comm' has no attribute associated to 'key1'.
#MPY_Attr_delete(comm, key1)

# Delete keys.
MPY_Keyval_free(key1)
MPY_Keyval_free(key2)

MPY_Finalize()
