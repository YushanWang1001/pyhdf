#!/usr/bin/env python

import sys
import Numeric

from mpy import *

MPY_Init()
rank = MPY_Comm_rank()
size = MPY_Comm_size()
root = 0

print "I am P%d of %d on node %s" % \
      (rank, size, MPY_Get_processor_name())

MPY_Barrier()

# Each process sends a row of a (size x size) integer array. 
arr1 = Numeric.array(range(rank, rank+size),'i')
# Allocate the array where the rows coming from all processes will be assembled.
res1 = Numeric.zeros((size,size), 'i')
# Gather all the rows.
MPY_Allgather(arr1, dataType=MPY_PYTHON_ARRAY, array=res1)
print "P%d res1=\n%s" % (rank, res1)
MPY_Barrier()
        
# This time we let MPY_Allgather() allocate the output array.
arr2 = Numeric.array(range(10*rank, 10*rank+size),'i')
res2 = MPY_Allgather(arr2, dataType=MPY_PYTHON_ARRAY)
print "P%d res2=\n%s" % (rank, res2)

MPY_Finalize()
