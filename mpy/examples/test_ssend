#!/usr/bin/env python

import sys
import mpi
import Numeric
import time

mpi.init()
rank = mpi.comm_rank()
size = mpi.comm_size()

root = 0

print "%.5f" % time.time(),"I am P%d of %d on node %s" % \
      (rank, size, mpi.get_processor_name())
mpi.barrier()

toProc = [1,2,3]
numMes = 3

if rank == root:
    for num in range(numMes):
        for p in toProc:
            msg = "sync send from %d to %d msg #%d" % (rank, p, num)
            print "%.5f" % time.time(),"P%d sync sent to %d msg='%s'" % \
                  (rank, p, msg)
            mpi.ssend(msg, p)
            print "%.5f" % time.time(),"P%d send to %d msg='%s' complete" % \
                  (rank, p, msg)
    print "%.5f" % time.time(),"P%d all messages sent in sync mode" % rank

    for p in toProc:
        msg, status = mpi.recv(p, retStatus=True)
        print "%.5f" % time.time(),"P%d received from %d msg='%s'" % \
              (rank, p, msg)
        
elif rank in toProc:
    time.sleep(1)
    for num in range(numMes):
        print "%.5f" % time.time(),"P%d sync recv from %d" % (rank, root) 
        msg, status = mpi.recv(root, retStatus=True)
        print "%.5f" % time.time(),"P%d received from %d msg='%s'" % \
              (rank, root, msg)
    print "%.5f" % time.time(),"P%d all sync messages received" % rank

    msg = "sync send from %d to %d" % (rank, root)
    mpi.ssend(msg, root)
    print "%.5f" % time.time(),"P%d sync send to %d msg='%s'" % (rank, root, msg)
