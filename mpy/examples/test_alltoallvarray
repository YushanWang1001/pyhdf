#!/usr/bin/env python

import sys
import Numeric

from mpy import *

MPY_Init()
rank = MPY_Comm_rank()
size = MPY_Comm_size()
root = 0

print "I am P%d of %d on node %s" % \
      (rank, size, MPY_Get_processor_name())

MPY_Barrier()

# Gathered messages can be of different lengths.

# Each process sets up an array of integers holding distinct values.
arr = Numeric.array(range(2*rank, 2*rank+15), 'i')
# Each process sends a different number of values to each other process.
counts = {0: (2,3,4,6),    # P0 send first 2 values to P0, next 3 to P1, etc
          1: (1,2,5,7),    # P1 sends first value to P0, next 2 to P1, etc
          2: (3,4,6,2),
          3: (1,1,5,8) }

# Dispatch the values. Let the function allocate the output array.
res1 = MPY_Alltoallv(arr, counts[rank], dataType=MPY_PYTHON_ARRAY) 
print "P%d  res1=\n%s" % (rank, res1)
MPY_Barrier()
        
MPY_Finalize()
