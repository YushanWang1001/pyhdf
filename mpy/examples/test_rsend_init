#!/usr/bin/env python

import sys
import mpi
import Numeric
import time

mpi.init()
rank = mpi.comm_rank()
size = mpi.comm_size()

root = 0

print "%.5f" % time.time(),"I am P%d of %d on node %s" % \
      (rank, size, mpi.get_processor_name())
mpi.barrier()

toProc = [1,2,3]
numMes = 3

if rank == root:
    # Create a permanent request for each receiver.
    requests = {}
    for p in toProc:
        requests[p] = mpi.rsend_init(1000, p)
    # Send messages using the permanent requests.
    app = []
    for num in range(numMes):
        for p in toProc:
            # Increase message length each time.
            app.append((num,p))
            # Load message into request buffer.
            msg = ["from %d to %d msg #%d" % (rank, p, num), app]
            mpi.requestLoad(requests[p], msg)
            # Start the send, equivalent to mpi.isend()
            print "%.5f" % time.time(),"P%d posting send to %d num %d" % \
                  (rank, p, num)
            mpi.start(requests[p])
            # Wait for request to complete.
            mpi.wait(requests[p])
            print "%.5f" % time.time(),"P%d  send complete to %d num %d" % \
                  (rank, p, num)

    print "%.5f" % time.time(),"P%d all msgs sent" % rank
    

elif rank in toProc:
    time.sleep(2)
    for num in range(numMes):
        print "%.5f" % time.time(),"P%d posting recv from %d num %d" % \
              (rank, root, num)
        msg, status = mpi.recv(root, retStatus=True)
        print "%.5f" % time.time(),"P%d received '%s' status=%s" % \
              (rank, msg, status)
    
