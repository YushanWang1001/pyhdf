#!/usr/bin/env python

import sys
import mpi
import Numeric

mpi.init()
rank = mpi.comm_rank()
size = mpi.comm_size()

root = 0

print "I am P%d of %d on node %s" % \
      (rank, size, mpi.get_processor_name())
mpi.barrier()

toProc = [1,2,3]
numMes = 3

if rank == root:
    # Create a permanent request for each receiver.
    requests = {}
    for p in toProc:
        requests[p] = mpi.send_init(1000, p)
    # Send messages using the permanent requests.
    app = []
    for num in range(numMes):
        for p in toProc:
            # Increase message length each time.
            app.append((num,p))
            # Load message into request buffer.
            msg = ["from %d to %d msg #%d" % (rank, p, num), app]
            mpi.requestLoad(requests[p], msg)
            # Start the send, equivalent to mpi.isend()
            mpi.start(requests[p])
            # Wait for request to complete.
            mpi.wait(requests[p])

    print "P%d all msgs sent" % rank
    # Free requests
    for p in toProc:
        mpi.request_free(requests[p])
        

elif rank in toProc:
    # Create 'numMes' request objects, so as to be able to use
    # startall() to launch the reading of all messages sent
    # to this process.
    requests = []
    for n in range(numMes):
        requests.append(mpi.recv_init(1000, root))
    # Launch all requests with startall().
    mpi.startall(requests)
    # Wait for all requests to complete.
    mpi.waitall(requests)
    # Extract messages.
    for n in range(numMes):
        msg = mpi.requestExtract(requests[n])
        print "P%d received '%s'" % (rank, msg)
    # Free request array.
    for n in range(numMes):
        mpi.request_free(requests[n])
