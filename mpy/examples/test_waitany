#!/usr/bin/env python

import sys
import mpi
import Numeric
import time

mpi.init()
rank = mpi.comm_rank()
size = mpi.comm_size()

root = 0

print "I am P%d of %d on node %s" % \
      (rank, size, mpi.get_processor_name())
mpi.barrier()


if rank == 0:
    requests = []
    requests.append(mpi.isend('message #1 for process 3', 3))
    requests.append(mpi.isend('message #2 for process 3 bla bla bla', 3))
    requests.append(mpi.isend([i for i in range(1000,1010)], 3))
    while True:
        idx = mpi.waitany(requests)
        if idx is None:
            break
        print "P%d request#%d completed" % (rank, idx)

elif rank == 3:
    requests = []
    requests.append(mpi.irecv(0))
    requests.append(mpi.irecv(0))
    requests.append(mpi.irecv(0))

    n = 0
    while True:
        idx, status = mpi.waitany(requests, retStatus=True)
        if idx is None:
            break
        print "P%d request #%d completed" % (rank, idx)
        obj = mpi.requestExtract(requests[idx])
        print "P%d obj=" % rank, obj, "status=",status
        
