#!/usr/bin/env python

import sys
import mpi
import Numeric
import time

mpi.init()
rank = mpi.comm_rank()
size = mpi.comm_size()

root = 0

print "I am P%d of %d on node %s" % \
      (rank, size, mpi.get_processor_name())
mpi.barrier()


if rank == 0:
    requests = []
    requests.append(mpi.isend('message #1 for process 3', 3,
                              tag=1))
    requests.append(mpi.isend('message #2 for process 3 bla bla bla', 3,
                              tag=2))
    requests.append(mpi.isend([i for i in range(100,110)], 3,
                              tag=3))
    n = 0
    for r in requests:
        mpi.wait(r)
        print "P%d request#%d completed" % (rank, n)
        n += 1

elif rank == 3:
    # Request messages in reverse order. This forces MPI to buffer
    # messages. Can this create a deadlock ?
    requests = []
    requests.append(mpi.irecv(0, tag=3))
    requests.append(mpi.irecv(0, tag=2))
    requests.append(mpi.irecv(0, tag=1))

    n = 0
    for r in requests:
        status = mpi.wait(r, retStatus=True)
        print "P%d request #%d completed" % (rank, n)
        obj = mpi.requestExtract(r)
        print "P%d obj=" % rank, obj, "status=",status
        n += 1
        
