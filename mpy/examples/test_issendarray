#!/usr/bin/env python

import sys
import Numeric

from mpy import *

MPY_Init()
rank = MPY_Comm_rank()
size = MPY_Comm_size()

root = 0

print "I am P%d of %d on node %s" % \
      (rank, size, MPY_Get_processor_name())
MPY_Barrier()

toProc = [3,1,2]

if rank == root:
    requests = []
    for p in toProc:
        arr1 = Numeric.ones((p,p), 'i')
        requests.append(MPY_Issend(arr1, p, dataType=MPY_PYTHON_ARRAY))
        print "P%d immediate send to %d arr=\n%s" % (rank, p, arr1)
        arr2 = Numeric.ones((p,p), 'f')
        requests.append(MPY_Issend(arr2, p, dataType=MPY_PYTHON_ARRAY))
        print "P%d immediate send to %d arr=\n%s" % (rank, p, arr2)
    while True:
        idx = MPY_Waitany(requests)
        if idx is None:
            break
        print "P%d request %d complete" % (rank, idx)
    
elif rank in toProc:
    requests = []
    arr1 = Numeric.zeros((rank,rank), 'i')
    requests.append(MPY_Irecv(root, dataType=MPY_PYTHON_ARRAY, array=arr1))
    arr2 = Numeric.zeros((rank,rank), 'f')
    requests.append(MPY_Irecv(root, dataType=MPY_PYTHON_ARRAY, array=arr2))
    while True:
        idx = MPY_Waitany(requests)
        if idx is None:
            break
        print "P%d request %d complete arr=\n%s" % \
              (rank, idx, requestExtract(requests[idx]))
    
