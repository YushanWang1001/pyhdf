#!/usr/bin/env python

import sys
import mpi
import Numeric

mpi.init()
rank = mpi.comm_rank()
size = mpi.comm_size()

root = 0

print "I am P%d of %d on node %s" % \
      (rank, size, mpi.get_processor_name())
mpi.barrier()

toProc = [1,2,3]
numMes = 3

if rank == root:
    requests = []
    for num in range(numMes):
        for p in toProc:
            msg = [root, p, num] + range(2*(num+1))
            requests.append(mpi.isend(msg, p, dataType=mpi.MPI_PYTHON_OBJ))
    while True:
        idx = mpi.waitany(requests)
        if idx is None:
            break

elif rank in toProc:
    requests = []
    for num in range(numMes):
        requests.append(mpi.irecv(root, nElem=100, dataType=mpi.MPI_PYTHON_OBJ))
    while True:
        idx, status = mpi.waitany(requests, retStatus=True)
        if idx is None:
            break
        print "P%d request %d complete status=%s" % (rank, idx, status)
        msg = mpi.requestExtract(requests[idx])
        print "P%d after got from %d msg='%s'" % \
              (rank, status.source, msg)
    
